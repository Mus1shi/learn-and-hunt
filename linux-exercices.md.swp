# Linux Command Learning Path – SOC Level 1

---

## System Identification
> Start by identifying the environment you're working on.

| Command     | Purpose | SOC Use Case |
|-------------|---------|--------------|
| `hostname`  | Displays the machine’s hostname | Useful when auditing logs or identifying machines in a network |
| `uptime`    | Shows system uptime | Helps detect unexpected reboots or instability |
| `id`        | Displays UID, GID, and user info | Check if the current user has privileged access |
| `groups`    | Lists groups the user belongs to | Verify group-level access (e.g., `sudo`, `adm`) |

---

## User Activity Monitoring
> Monitor who is logged in and what they are doing.

| Command     | Purpose | SOC Use Case |
|-------------|---------|--------------|
| `who`       | Shows currently logged-in users | Spot unauthorized sessions or shared terminals |
| `w`         | Detailed info about users and their current processes | Identify suspicious activity by user |
| `ps aux`    | Lists all processes | Detect unusual or persistent processes |
| `top`       | Real-time resource usage | Spot resource spikes, zombies, or runaway processes |

---

## Network Status
> Understand current network configuration and exposure.

| Command         | Purpose | SOC Use Case |
|------------------|---------|---------------|
| `ip a`           | Displays IP addresses and interfaces | Verify network exposure or misconfigured interfaces |
| `ss -tuln`       | Lists open TCP/UDP ports | Identify exposed services, detect misconfigurations |
| `netstat -tuln`  | Legacy equivalent of `ss` | Still useful on older machines, same objectives |

---

## System Services
> View and audit service status managed by `systemd`.

| Command                                | Purpose | SOC Use Case |
|----------------------------------------|---------|---------------|
| `systemctl list-units --type=service`  | Lists all active services | Detect unknown or rogue services running in the background |
| `systemctl status ssh`                 | Detailed status of SSH service | Check uptime, restart events, and connection logs |

---

## File Permissions & Ownership
> Audit security through file-level access control.

| Command     | Purpose | SOC Use Case |
|-------------|---------|---------------|
| `ls -l`     | Shows file permissions and metadata | Spot overly permissive files (e.g. `777`) |
| `chmod`     | Changes file permissions | Harden file security (e.g., remove exec rights) |
| `chown`     | Changes file ownership | Ensure proper user/group ownership, avoid privilege abuse |
| `umask`     | Shows or sets default file permissions | Understand default access risks during file creation |

---

## Log File Analysis
> Access and filter system logs – essential for threat detection.

| Command               | Purpose | SOC Use Case |
|------------------------|---------|---------------|
| `less`, `cat`, `tail`  | View log files (e.g. `/var/log/auth.log`) | Manually inspect login attempts, errors, alerts |
| `journalctl`           | View logs managed by `systemd` | Unified logging: better traceability and filtering |
| `journalctl -u ssh`    | Filter logs from SSH service only | Quickly investigate SSH-related events |
| `journalctl -p 3 -xb`  | Show critical errors from last boot | Triage critical failures or system compromise traces |

---
